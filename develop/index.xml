<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Develop on Magic Modules</title><link>https://googlecloudplatform.github.io/magic-modules/develop/</link><description>Recent content in Develop on Magic Modules</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://googlecloudplatform.github.io/magic-modules/develop/index.xml" rel="self" type="application/rss+xml"/><item><title>Add or modify a resource</title><link>https://googlecloudplatform.github.io/magic-modules/develop/resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/resource/</guid><description>Add or modify a resource # This page describes how to add a new resource to the google or google-beta Terraform provider using MMv1 and/or handwritten code.
For more information about types of resources and the generation process overall, see How Magic Modules works.
Before you begin # Complete the Generate the providers quickstart to set up your environment and your Google Cloud project. Ensure that your magic-modules, terraform-provider-google, and terraform-provider-google-beta repositories are up to date.</description></item><item><title>Add custom resource code</title><link>https://googlecloudplatform.github.io/magic-modules/develop/custom-code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/custom-code/</guid><description>Add custom resource code # This document covers how to add &amp;ldquo;custom code&amp;rdquo; to MMv1 resources. Custom code can be used to add arbitrary logic to a resource while still generating most of the code; it allows for a balance between maintainability and supporting real-worlds APIs that deviate from what MMv1 can support. Custom code should only be added if the desired behavior can&amp;rsquo;t be achieved otherwise.
Most custom code attributes are strings that contain a path to a template file relative to the mmv1 directory.</description></item><item><title>Add resource tests</title><link>https://googlecloudplatform.github.io/magic-modules/develop/test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/test/</guid><description>Add resource tests # This page describes how to add tests to a new resource in the google or google-beta Terraform provider.
For more information about testing, see the official Terraform documentation.
Before you begin # Determine whether your resources is using MMv1 generation or handwritten. If you are not adding tests to an in-progress PR, ensure that your magic-modules, terraform-provider-google, and terraform-provider-google-beta repositories are up to date. cd ~/magic-modules git checkout main &amp;amp;&amp;amp; git clean -f .</description></item><item><title>Add a datasource</title><link>https://googlecloudplatform.github.io/magic-modules/develop/add-handwritten-datasource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/add-handwritten-datasource/</guid><description>Datasources are like terraform resources except they don&amp;rsquo;t &lt;em>create&lt;/em> anything.</description></item><item><title>Promote to GA</title><link>https://googlecloudplatform.github.io/magic-modules/develop/promote-to-ga/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/promote-to-ga/</guid><description>Promote from beta to GA # This document describes how to promote an existing resource or field that uses MMv1 and/or handwritten code from the google-beta provider to the google (also known as &amp;ldquo;GA&amp;rdquo;) provider.
Handwritten code (including custom_code) commonly uses &amp;ldquo;version guards&amp;rdquo; in the form of &amp;lt;% unless version == 'ga' -%&amp;gt;...&amp;lt;% end -%&amp;gt; to wrap code that is beta-specific, which need to be removed during promotion.
For more information about types of resources and the generation process overall, see How Magic Modules works.</description></item><item><title>Run tests</title><link>https://googlecloudplatform.github.io/magic-modules/develop/run-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/run-tests/</guid><description>Run tests # Before you begin # Generate the modified provider(s)
Set up application default credentials for Terraform
gcloud auth application-default login export GOOGLE_USE_DEFAULT_CREDENTIALS=true Set the following environment variables:
export GOOGLE_PROJECT=PROJECT_ID export GOOGLE_REGION=us-central1 export GOOGLE_ZONE=us-central1-a Replace PROJECT_ID with the ID of the Google Cloud project you are using for testing.
Optional: Some tests may require additional variables to be set, such as:
GOOGLE_ORG GOOGLE_BILLING_ACCOUNT Run automated tests # GA Provider Run unit tests and linters</description></item><item><title>Make a breaking change</title><link>https://googlecloudplatform.github.io/magic-modules/develop/make-a-breaking-change/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/make-a-breaking-change/</guid><description>Guidance on making a breaking changes</description></item><item><title>Types of breaking changes</title><link>https://googlecloudplatform.github.io/magic-modules/develop/breaking-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/breaking-changes/</guid><description>Types of breaking changes # A &amp;ldquo;breaking change&amp;rdquo; is any change that requires an end user to modify a previously-valid configuration after a provider upgrade. In this context, a &amp;ldquo;valid configuration&amp;rdquo; is one that:
Is considered syntactically correct by terraform validate Does not return an error during terraform apply Creates, updates, deletes, or does not modify resources Only manages resources that have not been altered with other tools, such as gcloud or Cloud Console.</description></item><item><title>Handwritten docs style guide</title><link>https://googlecloudplatform.github.io/magic-modules/develop/handwritten-docs-style-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://googlecloudplatform.github.io/magic-modules/develop/handwritten-docs-style-guide/</guid><description>Handwritten documentation style guide # This document describes the style guide for handwritten documentation for resources and data sources. MMv1-based resources will automatically generate documentation that matches this style guide.
File name and location # Handwritten documentation lives in:
Data sources: magic-modules/third_party/terraform/website/docs/d/ Resources: magic-modules/third_party/terraform/website/docs/r/ The name of the file is the name of the resource without a google_ prefix. For example, for google_compute_instance, the file is called compute_instance.html.markdown
YAML frontmatter # Every resource or datasource documentation page must include YAML frontmatter which sets subcategory (where the page will be displayed in the left sidebar).</description></item></channel></rss>